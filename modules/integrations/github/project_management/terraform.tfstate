{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 134,
  "lineage": "d4d29a12-9d57-a42a-7d0f-7dd2e1f6d1d8",
  "outputs": {
    "milestone_number": {
      "value": 3,
      "type": "number"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "github_issue",
      "name": "tasks",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "assignees": [],
            "body": "The builder stage packages all the tools and compile-time dependencies\nfor your application. It has to build the mix release that will be\ncopied in the running stage.\n",
            "etag": "W/\"ee8ee91ccddf5a71624e593c188524a1ed93674b74da74b2e943d8622f50f511\"",
            "id": "kanban:1",
            "issue_id": 3215021432,
            "labels": [
              "Dockerfile",
              "Kind:Infrastructure"
            ],
            "milestone_number": 3,
            "number": 1,
            "repository": "kanban",
            "title": "Implement the Dockerfile's builder stage"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "assignees": [],
            "body": "This stage copies the release built in the builder stage and uses it as\nthe entrypoint of your Docker image with the minimum system requirement\nto run it.\n",
            "etag": "W/\"e0385ab55b4c3fa9b534a598f004441f6c6e6fcdb1b0045fdc8c737631049a36\"",
            "id": "kanban:6",
            "issue_id": 3215021809,
            "labels": [
              "Dockerfile",
              "Kind:Infrastructure"
            ],
            "milestone_number": 3,
            "number": 6,
            "repository": "kanban",
            "title": "Implement the Dockerfile's runner stage"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "assignees": [],
            "body": "Implement a CI pipeline that includes all of the necessary steps when\ndelivering an Elixir application: code compilation, dependency caching,\ntesting, code formatting, an unused dependency check.\n",
            "etag": "W/\"74d07ea27d66b6bcfbc04d11cf8ecf026d320414d7a0c04a5fd18ecdcd240e1c\"",
            "id": "kanban:5",
            "issue_id": 3215021743,
            "labels": [
              "Kind:CI-CD",
              "Tech:Elixir"
            ],
            "milestone_number": 1,
            "number": 5,
            "repository": "kanban",
            "title": "Elixir integration pipelines"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "assignees": null,
            "body": "Automate the pushing of your Docker image to the GitHub Docker registry if\nyour CI pipeline passes. You will need to authenticate yourself with the\nregistry before being able to push. You should create three tags for your\nDocker image: one that matches the commit it refers to, one that matches the\npull request number (if present), and other that is \"latest\".\n",
            "etag": "W/\"ed2293b2f9f6cf44275749326a0c41f05579a85304878f3b5b217207fccfe8ec\"",
            "id": "kanban:11",
            "issue_id": 3215022312,
            "labels": [
              "Kind:CI-CD",
              "Tech:Docker"
            ],
            "milestone_number": 1,
            "number": 11,
            "repository": "kanban",
            "title": "Push Docker image to GitHub registry automatically"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "assignees": [],
            "body": "Create a Docker Compose file that includes a PostgreSQL database and your\nPhoenix Live View application.\n",
            "etag": "W/\"2cd37871921314af82be687db3d67c73321ada9d8ee3ef81719fbff6b3fa7a8b\"",
            "id": "kanban:9",
            "issue_id": 3215022040,
            "labels": [
              "Env:Local",
              "Kind:Infrastructure",
              "Tech:Docker-Compose"
            ],
            "milestone_number": 3,
            "number": 9,
            "repository": "kanban",
            "title": "Create a Docker Compose file"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 5,
          "schema_version": 0,
          "attributes": {
            "assignees": [],
            "body": "Add all of the AWS resources that will allow you to deploy your application\nto a remote single-node swarm to your Terraform configuration. (Making the\nresources support a multi-node swarm will be in another task). You need to\nadd an EC2 instance, a VPC, a security group, SSH key pair.\n",
            "etag": "W/\"a25e9f429894e1f45125882d277c961e1f4ac18451d6b2bd49340dcaf589c45e\"",
            "id": "kanban:10",
            "issue_id": 3215022112,
            "labels": [
              "Env:AWS",
              "Kind:Infrastructure",
              "Tech:Terraform"
            ],
            "milestone_number": 3,
            "number": 10,
            "repository": "kanban",
            "title": "Create production env in AWS for a single-node swarm"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 6,
          "schema_version": 0,
          "attributes": {
            "assignees": null,
            "body": "Use Packer to create a custom AMI (Amazon Machine Image) for your EC2\ninstances and then link it to your existing AWS Terraform infrastructure.\nThis AMI should pre-install Docker and netcat.\n",
            "etag": "W/\"5b2f428926c5d65d727cbfa0ef87402852e806f71d8c8f6162e5b5709c21ea3e\"",
            "id": "kanban:13",
            "issue_id": 3215022453,
            "labels": [
              "Env:AWS",
              "Kind:Infrastructure",
              "Tech:Packer"
            ],
            "milestone_number": 3,
            "number": 13,
            "repository": "kanban",
            "title": "Create the EC2 AMI"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 7,
          "schema_version": 0,
          "attributes": {
            "assignees": [],
            "body": "Add a new GitHub action to your CI/CD pipeline that automatically deploys\nyour Phoenix Live View application any time any code is merged into the main\nbranch of your repository. This action should use the build tags that are\ncreated in the CI pipeline.\n",
            "etag": "W/\"32f1ef86e6a8eb900709c30f926245bedbe740617c713b627df99782d09df185\"",
            "id": "kanban:3",
            "issue_id": 3215021603,
            "labels": [
              "Kind:CI-CD",
              "Tech:GHA",
              "Tech:SOPS"
            ],
            "milestone_number": 1,
            "number": 3,
            "repository": "kanban",
            "title": "Create a Continuous Deployment pipeline"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 8,
          "schema_version": 0,
          "attributes": {
            "assignees": null,
            "body": "Use Docker secrets to hide the values to the following variables in your\nDocker Compose file: DATABASE_URL, POSTGRES_PASSWORD, and SECRET_KEY_BASE.\n",
            "etag": "W/\"5a9a13104c4714b69443e932e721fe93a207c66f4b17e01c96098dbb183ef8ff\"",
            "id": "kanban:14",
            "issue_id": 3215022529,
            "labels": [
              "Kind:CI-CD",
              "Tech:GHA",
              "Tech:SOPS"
            ],
            "milestone_number": 1,
            "number": 14,
            "repository": "kanban",
            "title": "Hide any sensitive data using Docker secrets"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 9,
          "schema_version": 0,
          "attributes": {
            "assignees": [],
            "body": "Revise your Terraform configuration so that it can support a multi-node\nswarm. To do this, create more than one EC2 instance and distribute it\nacross 3 availibility zones.\n",
            "etag": "W/\"0f04bd74d811f769514b8e4e661586f104bc5df8047b86bc6026525b7cc67ab7\"",
            "id": "kanban:2",
            "issue_id": 3215021511,
            "labels": [
              "Env:AWS",
              "Kind:Infrastructure",
              "Tech:Terraform"
            ],
            "milestone_number": 3,
            "number": 2,
            "repository": "kanban",
            "title": "Update Terraform Configuration for a multi-node swarm"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 10,
          "schema_version": 0,
          "attributes": {
            "assignees": null,
            "body": "Make the different instances of your Phoenix Live View Application form part\nof a distributed Erlang cluster. Do this using the libcluster library after\nyou start the application as an Erlang node.\n",
            "etag": "W/\"5575922aa1b5804ade0cd28121b5491055584aa09c71b963afc361a9fa8418b7\"",
            "id": "kanban:16",
            "issue_id": 3215022680,
            "labels": [
              "Kind:Infrastructure",
              "Tech:Elixir"
            ],
            "milestone_number": 3,
            "number": 16,
            "repository": "kanban",
            "title": "Make Elixir app part of a Distributed Erlang cluster"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 11,
          "schema_version": 0,
          "attributes": {
            "assignees": null,
            "body": "Adapt your AWS Terraform configuration to use an Auto Scaling Group so that\nyour Elixir application scales up/down depending on the average CPU usage of\nthe EC2 intances in that group.\n",
            "etag": "W/\"c729f73c6ed36d87d634c0b561068fe482468a56426a9fb6987ca85bbe3692a2\"",
            "id": "kanban:12",
            "issue_id": 3215022391,
            "labels": [
              "Env:AWS",
              "Kind:Infrastructure",
              "Tech:Terraform"
            ],
            "milestone_number": 3,
            "number": 12,
            "repository": "kanban",
            "title": "Make the Elixir application autoscale"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 12,
          "schema_version": 0,
          "attributes": {
            "assignees": [],
            "body": "Update the deployment keys of your Phoenix Live View application so that\nit automatically rolls back to a previous version if the image you want\nto deploy does not start properly.\n",
            "etag": "W/\"cfa7a61715879f80449d58c25ede78944ae5ebdb3326e0688aefea22bdd48c6e\"",
            "id": "kanban:7",
            "issue_id": 3215021883,
            "labels": [
              "Kind:Infrastructure",
              "Tech:Docker"
            ],
            "milestone_number": 3,
            "number": 7,
            "repository": "kanban",
            "title": "Implement automatic rollback upon failed deployments"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 13,
          "schema_version": 0,
          "attributes": {
            "assignees": [],
            "body": "Use Loki and Promtail to collect the logs for your Docker containers and\nGrafana to display them. Then use Prometheus and PromEx to collect the\nmetrics exposed by the main libraries used in an Elixir application.\n",
            "etag": "W/\"c6693676223e90e1ce199fdf0a101b8af8ed71b5b20f0b826bdde547c34c3854\"",
            "id": "kanban:8",
            "issue_id": 3215021967,
            "labels": [
              "Kind:Instrumentation",
              "Tech:Docker",
              "Tech:Elixir"
            ],
            "milestone_number": 4,
            "number": 8,
            "repository": "kanban",
            "title": "Implement Basic Instrumentation"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 14,
          "schema_version": 0,
          "attributes": {
            "assignees": null,
            "body": "Create your own custom PromEx metric that monitors the CPU usage of your\nElixir application.\n",
            "etag": "W/\"86735dbff1a38052cd8fc717999d890ffb1c4ebd3ae8148382b9cc76ca1bf275\"",
            "id": "kanban:15",
            "issue_id": 3215022604,
            "labels": [
              "Kind:Instrumentation",
              "Tech:Elixir"
            ],
            "milestone_number": 4,
            "number": 15,
            "repository": "kanban",
            "title": "Create Your Own Custom PromEx Metric"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        },
        {
          "index_key": 15,
          "schema_version": 0,
          "attributes": {
            "assignees": [],
            "body": "Create an alert so that you are notified any time the average CPU of your\nElixir applications reaches above 50%.\n",
            "etag": "W/\"3e656cfa5ddceae9d95b438e0da8c69425e8b915a5359be9adb7da6ba47d4759\"",
            "id": "kanban:4",
            "issue_id": 3215021668,
            "labels": [
              "Kind:Instrumentation",
              "Tech:Elixir"
            ],
            "milestone_number": 4,
            "number": 4,
            "repository": "kanban",
            "title": "Create A CPU Alert For Your Application"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_issue_label.issues_labels",
            "github_repository.kanban",
            "github_repository_milestone.epics"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "github_issue_label",
      "name": "issues_labels",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "dockerfile",
          "schema_version": 0,
          "attributes": {
            "color": "3895AD",
            "description": "",
            "etag": "W/\"04fcf9afa896e05991a5af1a2efb3f08581e30e926b05ad10c732cfd33f220cc\"",
            "id": "kanban:Dockerfile",
            "name": "Dockerfile",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Dockerfile"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "env-aws",
          "schema_version": 0,
          "attributes": {
            "color": "D3A968",
            "description": "",
            "etag": "W/\"970305bd3a8f4121c56ed4a0f554bf47a2044a7b429efad47f99a95e6b81513d\"",
            "id": "kanban:Env:AWS",
            "name": "Env:AWS",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Env:AWS"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "env-local",
          "schema_version": 0,
          "attributes": {
            "color": "0075ca",
            "description": "",
            "etag": "W/\"5a25828b7f92a73f9e1ea7a98dbf3b7c080563411969b0abb94818cb3821a6d1\"",
            "id": "kanban:Env:Local",
            "name": "Env:Local",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Env:Local"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "kind-ci-cd",
          "schema_version": 0,
          "attributes": {
            "color": "FBCA04",
            "description": "",
            "etag": "W/\"0fac2e068474e72dbf327542d59789cccdeb958ce3eb4e5ef0d000d75290aef2\"",
            "id": "kanban:Kind:CI-CD",
            "name": "Kind:CI-CD",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Kind:CI-CD"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "kind-documentation",
          "schema_version": 0,
          "attributes": {
            "color": "5319E7",
            "description": "",
            "etag": "W/\"5536d319f639d69beadddeed6eec7442409ecba9a3270b0c2d87aeef734ca291\"",
            "id": "kanban:Kind:Documentation",
            "name": "Kind:Documentation",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Kind:Documentation"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "kind-infrastructure",
          "schema_version": 0,
          "attributes": {
            "color": "B60205",
            "description": "",
            "etag": "W/\"8de1a4783515d6f362d45248abf6b026da50e1f05c5c918be162ff8a1bb4259c\"",
            "id": "kanban:Kind:Infrastructure",
            "name": "Kind:Infrastructure",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Kind:Infrastructure"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "kind-instrumentation",
          "schema_version": 0,
          "attributes": {
            "color": "0E8A16",
            "description": "",
            "etag": "W/\"e46c6570927f4a39292bcb80c6d17dc2384dc1da64537d8edec371cc5c815124\"",
            "id": "kanban:Kind:Instrumentation",
            "name": "Kind:Instrumentation",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Kind:Instrumentation"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "kind-uncategorized",
          "schema_version": 0,
          "attributes": {
            "color": "D93F0B",
            "description": "",
            "etag": "W/\"25e54b72e49ae8e05dd8fc710c3016d8b900155b8681aca0823a001a994da2d9\"",
            "id": "kanban:Kind:Uncategorized",
            "name": "Kind:Uncategorized",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Kind:Uncategorized"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "tech-docker",
          "schema_version": 0,
          "attributes": {
            "color": "1D76DB",
            "description": "",
            "etag": "W/\"048c3e4188da136cc6523d017b05f6c844c54dcc1706c077783e592870e8adb3\"",
            "id": "kanban:Tech:Docker",
            "name": "Tech:Docker",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Tech:Docker"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "tech-docker-compose",
          "schema_version": 0,
          "attributes": {
            "color": "006B75",
            "description": "",
            "etag": "W/\"cdf4ebb36efd3d89f1a7ff4720c6b0d55660f3bd875efd0d74b4cc46c9410905\"",
            "id": "kanban:Tech:Docker-Compose",
            "name": "Tech:Docker-Compose",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Tech:Docker-Compose"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "tech-elixir",
          "schema_version": 0,
          "attributes": {
            "color": "D9B1FC",
            "description": "",
            "etag": "W/\"1118817ce5bada0d958969890835d64534979ad028a8adcfa54ec05e91c31f09\"",
            "id": "kanban:Tech:Elixir",
            "name": "Tech:Elixir",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Tech:Elixir"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "tech-gha",
          "schema_version": 0,
          "attributes": {
            "color": "66FE68",
            "description": "",
            "etag": "W/\"0e72b93c5a646ab19f340e3052d06def562e2c03df73d209b1ceaa04c2eb42ec\"",
            "id": "kanban:Tech:GHA",
            "name": "Tech:GHA",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Tech:GHA"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "tech-packer",
          "schema_version": 0,
          "attributes": {
            "color": "1D76DB",
            "description": "",
            "etag": "W/\"0d233ee16b339645ee0a9c79a92840016aba75adf32b9dec8f00eeb5a0c310a0\"",
            "id": "kanban:Tech:Packer",
            "name": "Tech:Packer",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Tech:Packer"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "tech-sops",
          "schema_version": 0,
          "attributes": {
            "color": "F9D0C4",
            "description": "",
            "etag": "W/\"9990729a07847e166e01c49a97aff5c6e89becc86f5e859c7ff2ea0a9d05c968\"",
            "id": "kanban:Tech:SOPS",
            "name": "Tech:SOPS",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Tech:SOPS"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "tech-terraform",
          "schema_version": 0,
          "attributes": {
            "color": "5319A1",
            "description": "",
            "etag": "W/\"21584f1f0b3b1c943cd4d0acd11939da5bf9f198beb64abce218394fa5d4d4b3\"",
            "id": "kanban:Tech:Terraform",
            "name": "Tech:Terraform",
            "repository": "kanban",
            "url": "https://api.github.com/repos/marcbey/kanban/labels/Tech:Terraform"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "github_repository",
      "name": "kanban",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow_auto_merge": false,
            "allow_merge_commit": true,
            "allow_rebase_merge": true,
            "allow_squash_merge": true,
            "allow_update_branch": false,
            "archive_on_destroy": null,
            "archived": false,
            "auto_init": true,
            "default_branch": "main",
            "delete_branch_on_merge": true,
            "description": "Playground for engineering elixir applications",
            "etag": "W/\"18ecbe31f490560aa00b0fc81dd70701937d164a63c193c68f4dcd4f34ec38f4\"",
            "full_name": "marcbey/kanban",
            "git_clone_url": "git://github.com/marcbey/kanban.git",
            "gitignore_template": "Terraform",
            "has_discussions": false,
            "has_downloads": false,
            "has_issues": true,
            "has_projects": false,
            "has_wiki": false,
            "homepage_url": "",
            "html_url": "https://github.com/marcbey/kanban",
            "http_clone_url": "https://github.com/marcbey/kanban.git",
            "id": "kanban",
            "ignore_vulnerability_alerts_during_read": null,
            "is_template": false,
            "license_template": null,
            "merge_commit_message": "PR_TITLE",
            "merge_commit_title": "MERGE_MESSAGE",
            "name": "kanban",
            "node_id": "R_kgDOPJfLQw",
            "pages": [],
            "primary_language": "HCL",
            "private": false,
            "repo_id": 1016580931,
            "security_and_analysis": [
              {
                "advanced_security": [],
                "secret_scanning": [
                  {
                    "status": "enabled"
                  }
                ],
                "secret_scanning_push_protection": [
                  {
                    "status": "enabled"
                  }
                ]
              }
            ],
            "squash_merge_commit_message": "COMMIT_MESSAGES",
            "squash_merge_commit_title": "COMMIT_OR_PR_TITLE",
            "ssh_clone_url": "git@github.com:marcbey/kanban.git",
            "svn_url": "https://github.com/marcbey/kanban",
            "template": [],
            "topics": [],
            "visibility": "public",
            "vulnerability_alerts": false,
            "web_commit_signoff_required": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "github_repository_milestone",
      "name": "epics",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": "ci-cd",
          "schema_version": 0,
          "attributes": {
            "description": "This milestone will include all deliverables that have to do with GitHub workflows that will perform the basic checks for an Elixir application. It will also build the Docker image and pull the latest images in production. ",
            "due_date": "2025-09-01",
            "id": "marcbey/kanban/1",
            "number": 1,
            "owner": "marcbey",
            "repository": "kanban",
            "state": "open",
            "title": "Continuous Deployment / Continuous Integration"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "documentation",
          "schema_version": 0,
          "attributes": {
            "description": "This milestone includes documentation for Terraform, Elixir, Packer and others and will converge with CI when needed. ",
            "due_date": "",
            "id": "marcbey/kanban/2",
            "number": 2,
            "owner": "marcbey",
            "repository": "kanban",
            "state": "open",
            "title": "Documentation"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "infrastructure",
          "schema_version": 0,
          "attributes": {
            "description": "This milestone includes all the deliverables related to building the application (e.g Dockerfile), provisioning AWS, the local environment and the base AMI with Packer. ",
            "due_date": "2025-08-01",
            "id": "marcbey/kanban/3",
            "number": 3,
            "owner": "marcbey",
            "repository": "kanban",
            "state": "open",
            "title": "Infrastructure"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "instrumentation",
          "schema_version": 0,
          "attributes": {
            "description": "This milestone will include all deliverables that have to do with the addition of basic instrumentation and BEAM specific metrics for your application. Any task(s) related to instrumentation (independently of which part of the stack they relate to) will be included in this milestone. ",
            "due_date": "2025-10-01",
            "id": "marcbey/kanban/4",
            "number": 4,
            "owner": "marcbey",
            "repository": "kanban",
            "state": "open",
            "title": "Instrumentation"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        },
        {
          "index_key": "uncategorized",
          "schema_version": 0,
          "attributes": {
            "description": "A milestone to add all issues that do not fit in any of the other milestones. This is an easy way to track those uncategorized tasks. ",
            "due_date": "",
            "id": "marcbey/kanban/5",
            "number": 5,
            "owner": "marcbey",
            "repository": "kanban",
            "state": "open",
            "title": "Uncategorized"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "github_repository.kanban"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
